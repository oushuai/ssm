<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itheima.dao.CustomerDao">
<!--一个user对应多个customer一对多-->
    <resultMap id="CustomerUserMAP" type="customer">
        <id property="id" column="id"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>
        <!--建立一对一的关系映射，配置封装user-->
        <!--javaType这里用了alias起别名，写user就行-->
       <association property="user" column="uid" javaType="user">
           <id column="id" property="id"></id>
           <result property="username" column="username"></result>
           <result property="birthday" column="birthday"></result>
           <result property="sex" column="sex"></result>
           <result property="address" column="address"></result>
       </association>
    </resultMap>
    <select id="findAll" resultMap="CustomerUserMAP">
        select user.username,user.address,c.* from customer c inner join
	 user where user.id=c.uid;
    </select>
<!--一对一延迟加载开始-->
    <resultMap id="lazyCustomerUserMAP" type="customer">
        <id property="id" column="id"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>
        <!--建立一对一的关系映射，配置封装user-->
        <!--javaType这里用了alias起别名，写user就行-->
        <!--select属性指定的内容,查询用户的唯一标识-->
        <!--colunm属性指定的内容,用户根据id查询所需要参数的值-->
        <association property="user" column="uid" javaType="user" select="com.itheima.dao.UserDao.findById">
        </association>
    </resultMap>
    <select id="findAllbyLazy" resultMap="lazyCustomerUserMAP">
        select * from customer
    </select>
    <!--延迟加载结束-->
    <select id="findAllCustomer" resultType="customerUser">
        select user.username,user.address,c.* from customer c inner join
	 user where user.id=c.uid;
    </select>
</mapper>