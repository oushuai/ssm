<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.UserDao">
    <!--配置查询结果的列名和实体类的属性名对应关系-->
    <!--实体类和数据库字段两种解决办法
    1.起别名 执行效率高但是麻烦
    2.resultMap对应 开发效率高-->
    <resultMap id="resultMap" type="com.itheima.domain.User">
    <id property="id" column="id"></id>
    <result property="sex" column="sex"></result>
    <result property="username" column="username"></result>
    <result property="birthday" column="birthday"></result>
    </resultMap>
    <!--<select id="findAll" resultMap="resultMap">-->
    <!--select * from user-->
    <!--</select>-->
    <resultMap id="userCustomerMap" type="user">
        <id column="id" property="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <!--配置user对象中accounts集合的映射-->
        <collection property="customerList" ofType="customer">
            <!--id重复起别名-->
            <id property="id" column="id"></id>
            <result property="uid" column="uid"></result>
            <result property="money" column="money"></result>
        </collection>
    </resultMap>

    <select id="findAllRoleUser" resultMap="roleUserMap">
      	select u.*,r.id as rid,r.role_name,r.role_detail from role r
		right join user_role ur on r.id=ur.rid
	    right join user u on u.id=ur.uid;
    </select>

    <resultMap id="roleUserMap" type="user">
        <id column="id" property="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <!--配置user对象中accounts集合的映射-->
        <collection property="roles" ofType="role">
            <!--id重复起别名-->
            <id column="rid" property="roleId"></id>
            <result property="roleName" column="role_name"></result>
            <result property="detail" column="role_detail"></result>
        </collection>
    </resultMap>

    <select id="findAllUserAccount" resultMap="userCustomerMap">
        		 select * from user u left outer join customer c on u.id=c.uid;
</select>
    <select id="findAll" resultType="user">
        select * from user
</select>

    <insert id="save" parameterType="com.itheima.domain.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <!--配置插入操作后返回数据id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,birthday,sex,address) values (#{username},#{birthday},#{sex},#{address})
    </insert>

    <update id="update" parameterType="com.itheima.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>

    <select id="findByName" parameterType="java.lang.String" resultMap="resultMap">
        select * from user where username like #{username}
    </select>
    <select id="count" resultType="int">
        select count(id)  from user
    </select>
    <!--根据QueryVo查询用户,ognl表达式可以直接写属性根据传的参数-->
    <select id="findByQueryVo" parameterType="com.itheima.domain.QueryVo" resultType="com.itheima.domain.User">
        select * from user where username like #{user.username}
    </select>

    <select id="findByCondition" parameterType="user" resultType="user">
        select * from user
        <where>
            <if test="username!=null">
                and username=#{username}
            </if>
            <if test="sex!=null">
                and sex=#{sex}
            </if>
        </where>
    </select>

    <!--了解sql和include标签的组合抽取公共sql，注意拼接的时候sql标签里面sql不用;-->
    <select id="findByIds" parameterType="queryVo" resultType="user">
        <include refid="normal"></include>
        <where>
            <if test="ids!=null and ids.size>0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
    <sql id="normal">
        select * from user
    </sql>

    <!--开启二级缓存-->
    <cache></cache>
    <select id="findById" useCache="true" parameterType="java.lang.Integer" resultType="com.itheima.domain.User">
        select * from user where id=#{id}
    </select>
</mapper>